

Техническое Задание: Проект "Учебная Платформа" (Актуальная версия)

1. Общая концепция

Веб-приложение на стеке MERN+R (MongoDB, Express, React, Node.js, Redis) с Vite для фронтенда. Платформа имеет три роли: "Администратор", "Учитель" и "Ученик". Ключевая логика построена вокруг создания учителем учебных групп, добавления в них уроков с заданиями и выставления оценок. Администратор управляет финансовыми потоками и аналитикой.

2. Бэкенд (Node.js, Express, MongoDB, Redis)

Модели данных (Mongoose Schemas):

User.js: name, email, password, role, group.

Group.js: name, teacher, students.

Lesson.js: title, assignments, dueDate, teacher, group.

Evaluation.js: lesson, student, teacher, grade, feedback, skills.

Expense.js (Добавлено): Модель для учета общих расходов компании (аренда, маркетинг и т.д.).

Salary.js (Добавлено): Модель для учета и управления зарплатами преподавателей за определенный период.

TuitionPayment.js (Добавлено): Модель для генерации и отслеживания счетов на оплату обучения для студентов.

API Роуты и логика:

/api/auth: Регистрация и логин (работает).

/api/groups: Создание и управление группами (работает).

/api/lessons:

Создание и управление уроками и заданиями (работает).

GET /:id (Добавлен): Роут для получения детальной информации о конкретном уроке.

/api/evaluations:

Сохранение и получение оценок (работает).

GET /student/:lessonId (Изменен): Роут теперь отдает на фронтенд правильно отформатированный массив skills (только ID выполненных заданий), что позволяет корректно отображать статус заданий в модальном окне ученика.

/api/stats:

GET /group/:groupId: Роут для статистики группы учителя (работает).

GET /student: Роут для статистики ученика (Изменен): Ответ теперь для каждой оценки в myEvaluations включает поле evaluationDate (дата выставления оценки).

/api/accounting (Добавлено): Роуты для управления внутренней бухгалтерией. Включают CRUD для расходов, управление зарплатами и получение сводного финансового отчета (доходы, расходы, прибыль). Доступен только администратору.

/api/finance (Добавлено): Роуты для управления счетами студентов. Позволяют автоматически генерировать счета на оплату за месяц, получать списки счетов с фильтрацией по периоду и группе, а также отмечать их как оплаченные. Доступен только администратору.

/api/overview (Добавлено): Роут для получения сводной аналитики по всем преподавателям, включая количество студентов и средний балл по их группам. Доступен только администратору.

3. Фронтенд (React, Vite)

Реализованная функциональность (Текущее состояние):

Аутентификация и Роутинг: Работают корректно.

Панель Учителя (TeacherDashboard): Полностью функциональна. Включает создание уроков, управление заданиями, выставление оценок и просмотр детальной статистики по группам.

Панель Ученика (StudentDashboard): Полностью функциональна. Включает просмотр назначенных уроков, деталей урока с результатами, а также просмотр своего прогресса и рейтинга в группе.

Управление группами (GroupsPage): Учитель может создавать группы, добавлять в них учеников из списка нераспределенных и удалять учеников/группы.

Административные Модули (Добавлено):

Страница "Финансы" (FinancePage): Интерфейс для управления оплатами студентов. Позволяет генерировать счета, просматривать их за выбранный диапазон дат, фильтровать по группе и отмечать оплаченные.

Страница "Бухгалтерия" (AccountingPage): Панель для управления внутренними финансами. Включает три вкладки: "Сводка" (доходы, расходы, прибыль за месяц), "Зарплаты" (расчет и выплата зарплат учителям) и "Расходы" (добавление и учет прочих расходов компании).

4. Ключевые улучшения и изменения (в рамках последней сессии):

Полная адаптивность (Responsive Design):

Все ключевые интерфейсы (TeacherDashboard, StudentDashboard, GroupsPage) полностью адаптированы для мобильных устройств.

На узких экранах многоколоночные макеты корректно перестраиваются в одноколоночные.

Боковая панель навигации (Sidebar) на мобильных устройствах трансформируется в удобную нижнюю панель (Bottom Bar).

Все таблицы (статистика учителя, прогресс ученика) адаптивны и читаемы на мобильных.

Улучшения UX/UI для Учителя:

Модальные окна: Исправлено поведение модального окна "Управлять уроком". При большом количестве заданий контент теперь прокручивается внутри окна, не ломая верстку.

Рефакторинг CSS: Структура CSS-модулей была реорганизована по профессиональным стандартам (колокация стилей) для упрощения дальнейшей поддержки.

Улучшения UX/UI для Ученика:

Редизайн шапки: Шапка (Header) на панели ученика была упрощена и сделана более стильной. Удалены неиспользуемые элементы (поиск, уведомления).

Исправлена верстка: Устранен баг, при котором контент "прилипал" к нижней навигационной панели на мобильных устройствах.

Детализация урока: В модальном окне урока теперь корректно отображается статус каждого задания: зеленая галочка (✔️) для выполненных и красный крестик (❌) для невыполненных.

Переработана таблица "Мой прогресс":

Добавлена дата выставления оценки, что дает больше контекста.

Добавлен цветовой индикатор (зеленый/желтый/красный), который визуально отражает уровень оценки.

5. (Добавлено) Оптимизация производительности и масштабируемости

Оптимизация запросов к MongoDB: Для ускорения ответа от базы данных были добавлены индексы на ключевые поля в моделях и применена проекция (.select()) для уменьшения объема передаваемых данных.

Кеширование на стороне сервера (Redis): Все "тяжелые" и часто запрашиваемые данные (статистика, финансовые отчеты, аналитика) кешируются в Redis. Это снижает нагрузку на базу данных в десятки раз и обеспечивает практически мгновенную загрузку страниц при повторных посещениях. Реализована стратегия инвалидации (очистки) кеша при изменении соответствующих данных.

Фоновые задачи (BullMQ): Ресурсоемкие операции, такие как массовая генерация счетов для студентов, вынесены в фоновую очередь. Это обеспечивает мгновенный отклик интерфейса для администратора и повышает надежность выполнения длительных задач.


6. (Добавлено)  Визуализация Финансовых Данных
1. Общая концепция
Для повышения наглядности и упрощения анализа финансовых показателей в панель Администратора был добавлен модуль визуализации данных. Модуль интегрирован во вкладку "Сводка" на странице "Бухгалтерия".
2. Бэкенд (Изменения)
API Роуты (/api/accounting):
Добавлен новый роут GET /trends:
Назначение: Предоставляет агрегированные данные о доходах и расходах за последние 6 месяцев.
Логика: Эффективно собирает данные из коллекций TuitionPayment, Salary и Expense и формирует ответ, готовый для построения линейного графика на фронтенде.
Оптимизация: Для обеспечения максимальной актуальности данных, ответ этого роута не кешируется.
3. Фронтенд (Изменения)
Страница "Бухгалтерия" (AccountingPage):
Вкладка "Сводка" была полностью переработана для отображения графиков.
Добавлен график "Финансовые тренды (Последние 6 месяцев)":
Тип: Линейный график (Line Chart).
Данные: Отображает динамику общих доходов и расходов, позволяя администратору быстро оценивать финансовые тренды.
Добавлена диаграмма "Разбивка расходов" (Expense Breakdown):
Тип: Круговая диаграмма (Doughnut Chart).
Данные: Визуализирует структуру расходов за выбранный месяц.
Улучшение: Для большей информативности на сегментах диаграммы отображаются процентные доли, что упрощает анализ.
Новые зависимости:
Для реализации графиков в проект были добавлены библиотеки: chart.js, react-chartjs-2 и chartjs-plugin-datalabels.